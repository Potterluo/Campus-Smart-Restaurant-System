{"remainingRequest":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\springboot+vue\\pure-design-master\\vue\\src\\views\\Login.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\springboot+vue\\pure-design-master\\vue\\src\\views\\Login.vue","mtime":1652154354741},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651840069138},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1651840064580},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1651840060980},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651840057970},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1651840061711}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLndyYXBwZXIgewogIGhlaWdodDogMTAwdmg7CiAgLypiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tIHJpZ2h0LCAjNDNDQkZGLCAjOTcwOENDKTsqLwogIGJhY2tncm91bmQtaW1hZ2U6IHVybCgiLi4vYXNzZXRzL2JnMS5qcGciKTsKICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyOwogIG92ZXJmbG93OiBoaWRkZW47Cn0K"},{"version":3,"sources":["Login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmGA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Login.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"wrapper\">\n    <div\n        style=\"margin: 150px auto; background-color: rgba(255,255,255,0.7); width: 350px; height: 360px; padding: 20px; border-radius: 10px\">\n      <div style=\"margin: 20px 0; text-align: center; font-size: 24px\"><b>校园智慧餐厅</b></div>\n      <el-form :model=\"user\" :rules=\"rules\" ref=\"userForm\">\n        <el-form-item prop=\"username\">\n          <el-input size=\"medium\" style=\"margin: 10px 0\" prefix-icon=\"el-icon-user\" v-model=\"user.username\"></el-input>\n        </el-form-item>\n        <el-form-item prop=\"password\">\n          <el-input size=\"medium\" style=\"margin: 10px 0\" prefix-icon=\"el-icon-lock\" show-password\n                    v-model=\"user.password\"></el-input>\n        </el-form-item>\n        <el-form-item >\n          <div style=\"display: flex\">\n            <el-input size=\"medium\" style=\"margin: 10px 0;width: 70%\" prefix-icon=\"el-icon-key\" v-model=\"user.validCode\"></el-input>\n            <ValidCode @input=\"createValidCode\" />\n          </div>\n\n        </el-form-item>\n        <el-form-item style=\"margin: 10px 0; text-align: right\">\n          <el-button type=\"warning\" size=\"small\" autocomplete=\"off\" @click=\"$router.push('/register')\">注册</el-button>\n          <el-button type=\"primary\" size=\"small\" autocomplete=\"off\" @click=\"login\">登录</el-button>\n        </el-form-item>\n      </el-form>\n    </div>\n  </div>\n</template>\n\n<script>\nimport {setRoutes} from \"@/router\";\nimport ValidCode from \"@/components/ValidCode\";\n\nexport default {\n  name: \"Login\",\n  components: {ValidCode},\n  data() {\n    return {\n      user: {},\n      validCode:'',\n      form:{},\n      rules: {\n        username: [\n          {required: true, message: '请输入用户名', trigger: 'blur'},\n          {min: 3, max: 10, message: '长度在 3 到 5 个字符', trigger: 'blur'}\n        ],\n        password: [\n          {required: true, message: '请输入密码', trigger: 'blur'},\n          {min: 1, max: 20, message: '长度在 1 到 20 个字符', trigger: 'blur'}\n        ],\n        validCode:[\n          {required: true, message: '请输入验证码', trigger: 'blur'},\n        ]\n      }\n    }\n  },\n  methods: {\n    login() {\n      this.$refs['userForm'].validate((valid) => {\n        if (valid) {  // 表单校验合法\n          if (!this.user.validCode) {\n            this.$message.error(\"请填写验证码\")\n            return\n          }\n          if(this.user.validCode.toLowerCase() !== this.validCode.toLowerCase()) {\n            console.log(this.user.validCode)\n            console.log(this.validCode)\n            this.$message.error(\"验证码错误\")\n            return\n          }\n          this.request.post(\"/user/login\", this.user).then(res => {\n            if (res.code === '200') {\n              localStorage.setItem(\"user\", JSON.stringify(res.data))  // 存储用户信息到浏览器\n              localStorage.setItem(\"menus\", JSON.stringify(res.data.menus))  // 存储用户信息到浏览器\n              // 动态设置当前用户的路由\n              setRoutes()\n              this.$message.success(\"登录成功\")\n\n              if (res.data.role === 'ROLE_STUDENT') {\n                this.$router.push(\"/front/home\")\n              } else {\n                this.$router.push(\"/\")\n              }\n            } else {\n              this.$message.error(res.msg)\n            }\n          })\n        }\n      });\n    },\n    createValidCode(data){\n      console.log(data);\n      this.validCode=data;\n    }\n  }\n}\n</script>\n\n<style>\n.wrapper {\n  height: 100vh;\n  /*background-image: linear-gradient(to bottom right, #43CBFF, #9708CC);*/\n  background-image: url(\"../assets/bg1.jpg\");\n  background-size: cover;\n  overflow: hidden;\n}\n</style>\n"]}]}