{"remainingRequest":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\springboot+vue\\pure-design-master\\vue\\src\\views\\Role.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\springboot+vue\\pure-design-master\\vue\\src\\views\\Role.vue","mtime":1647957520000},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651840069138},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1651840064580},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1651840060980},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651840057970},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1651840061711}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmhlYWRlckJnIHsKICBiYWNrZ3JvdW5kOiAjZWVlIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["Role.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+PA;AACA;AACA","file":"Role.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div>\n    <div style=\"margin: 10px 0\">\n      <el-input style=\"width: 200px\" placeholder=\"请输入名称\" suffix-icon=\"el-icon-search\" v-model=\"name\"></el-input>\n<!--      <el-input style=\"width: 200px\" placeholder=\"请输入邮箱\" suffix-icon=\"el-icon-message\" class=\"ml-5\" v-model=\"email\"></el-input>-->\n<!--      <el-input style=\"width: 200px\" placeholder=\"请输入地址\" suffix-icon=\"el-icon-position\" class=\"ml-5\" v-model=\"address\"></el-input>-->\n      <el-button class=\"ml-5\" type=\"primary\" @click=\"load\">搜索</el-button>\n      <el-button type=\"warning\" @click=\"reset\">重置</el-button>\n    </div>\n\n    <div style=\"margin: 10px 0\">\n      <el-button type=\"primary\" @click=\"handleAdd\">新增 <i class=\"el-icon-circle-plus-outline\"></i></el-button>\n      <el-popconfirm\n          class=\"ml-5\"\n          confirm-button-text='确定'\n          cancel-button-text='我再想想'\n          icon=\"el-icon-info\"\n          icon-color=\"red\"\n          title=\"您确定批量删除这些数据吗？\"\n          @confirm=\"delBatch\"\n      >\n        <el-button type=\"danger\" slot=\"reference\">批量删除 <i class=\"el-icon-remove-outline\"></i></el-button>\n      </el-popconfirm>\n<!--      <el-upload action=\"http://localhost:9090/user/import\" :show-file-list=\"false\" accept=\"xlsx\" :on-success=\"handleExcelImportSuccess\" style=\"display: inline-block\">-->\n<!--        <el-button type=\"primary\" class=\"ml-5\">导入 <i class=\"el-icon-bottom\"></i></el-button>-->\n<!--      </el-upload>-->\n<!--      <el-button type=\"primary\" @click=\"exp\" class=\"ml-5\">导出 <i class=\"el-icon-top\"></i></el-button>-->\n    </div>\n\n    <el-table :data=\"tableData\" border stripe :header-cell-class-name=\"'headerBg'\"  @selection-change=\"handleSelectionChange\">\n      <el-table-column type=\"selection\" width=\"55\"></el-table-column>\n      <el-table-column prop=\"id\" label=\"ID\" width=\"80\"></el-table-column>\n      <el-table-column prop=\"name\" label=\"名称\"></el-table-column>\n      <el-table-column prop=\"flag\" label=\"唯一标识\"></el-table-column>\n      <el-table-column prop=\"description\" label=\"描述\"></el-table-column>\n      <el-table-column label=\"操作\"  width=\"280\" align=\"center\">\n        <template slot-scope=\"scope\">\n          <el-button type=\"info\" @click=\"selectMenu(scope.row)\">分配菜单 <i class=\"el-icon-menu\"></i></el-button>\n          <el-button type=\"success\" @click=\"handleEdit(scope.row)\">编辑 <i class=\"el-icon-edit\"></i></el-button>\n          <el-popconfirm\n              class=\"ml-5\"\n              confirm-button-text='确定'\n              cancel-button-text='我再想想'\n              icon=\"el-icon-info\"\n              icon-color=\"red\"\n              title=\"您确定删除吗？\"\n              @confirm=\"del(scope.row.id)\"\n          >\n            <el-button type=\"danger\" slot=\"reference\">删除 <i class=\"el-icon-remove-outline\"></i></el-button>\n          </el-popconfirm>\n        </template>\n      </el-table-column>\n    </el-table>\n    <div style=\"padding: 10px 0\">\n      <el-pagination\n          @size-change=\"handleSizeChange\"\n          @current-change=\"handleCurrentChange\"\n          :current-page=\"pageNum\"\n          :page-sizes=\"[2, 5, 10, 20]\"\n          :page-size=\"pageSize\"\n          layout=\"total, sizes, prev, pager, next, jumper\"\n          :total=\"total\">\n      </el-pagination>\n    </div>\n\n    <el-dialog title=\"角色信息\" :visible.sync=\"dialogFormVisible\" width=\"30%\" >\n      <el-form label-width=\"80px\" size=\"small\">\n        <el-form-item label=\"名称\">\n          <el-input v-model=\"form.name\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"唯一标识\">\n          <el-input v-model=\"form.flag\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n        <el-form-item label=\"描述\">\n          <el-input v-model=\"form.description\" autocomplete=\"off\"></el-input>\n        </el-form-item>\n      </el-form>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"dialogFormVisible = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"save\">确 定</el-button>\n      </div>\n    </el-dialog>\n\n    <el-dialog title=\"菜单分配\" :visible.sync=\"menuDialogVis\" width=\"30%\">\n      <el-tree\n          :props=\"props\"\n          :data=\"menuData\"\n          show-checkbox\n          node-key=\"id\"\n          ref=\"tree\"\n          :default-expanded-keys=\"expends\"\n          :default-checked-keys=\"checks\">\n         <span class=\"custom-tree-node\" slot-scope=\"{ node, data }\">\n            <span><i :class=\"data.icon\"></i> {{ data.name }}</span>\n         </span>\n      </el-tree>\n      <div slot=\"footer\" class=\"dialog-footer\">\n        <el-button @click=\"menuDialogVis = false\">取 消</el-button>\n        <el-button type=\"primary\" @click=\"saveRoleMenu\">确 定</el-button>\n      </div>\n    </el-dialog>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: \"Role\",\n  data() {\n    return {\n      tableData: [],\n      total: 0,\n      pageNum: 1,\n      pageSize: 10,\n      name: \"\",\n      form: {},\n      dialogFormVisible: false,\n      menuDialogVis: false,\n      multipleSelection: [],\n      menuData: [],\n      props: {\n        label: 'name',\n      },\n      expends: [],\n      checks: [],\n      roleId: 0,\n      roleFlag: '',\n      ids: []\n    }\n  },\n  created() {\n    this.load()\n  },\n  methods: {\n    load() {\n      this.request.get(\"/role/page\", {\n        params: {\n          pageNum: this.pageNum,\n          pageSize: this.pageSize,\n          name: this.name,\n        }\n      }).then(res => {\n        this.tableData = res.data.records\n        this.total = res.data.total\n      })\n\n      this.request.get(\"/menu/ids\").then(r => {\n        this.ids = r.data\n      })\n\n    },\n    save() {\n      this.request.post(\"/role\", this.form).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"保存成功\")\n          this.dialogFormVisible = false\n          this.load()\n        } else {\n          this.$message.error(\"保存失败\")\n        }\n      })\n    },\n    saveRoleMenu() {\n      this.request.post(\"/role/roleMenu/\" + this.roleId, this.$refs.tree.getCheckedKeys()).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"绑定成功\")\n          this.menuDialogVis = false\n\n          // 操作管理员角色后需要重新登录\n          if (this.roleFlag === 'ROLE_ADMIN') {\n            this.$store.commit(\"logout\")\n          }\n\n        } else {\n          this.$message.error(res.msg)\n        }\n      })\n    },\n    handleAdd() {\n      this.dialogFormVisible = true\n      this.form = {}\n    },\n    handleEdit(row) {\n      this.form = JSON.parse(JSON.stringify(row))\n      this.dialogFormVisible = true\n    },\n    del(id) {\n      this.request.delete(\"/role/\" + id).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"删除成功\")\n          this.load()\n        } else {\n          this.$message.error(\"删除失败\")\n        }\n      })\n    },\n    handleSelectionChange(val) {\n      console.log(val)\n      this.multipleSelection = val\n    },\n    delBatch() {\n      let ids = this.multipleSelection.map(v => v.id)  // [{}, {}, {}] => [1,2,3]\n      this.request.post(\"/role/del/batch\", ids).then(res => {\n        if (res.code === '200') {\n          this.$message.success(\"批量删除成功\")\n          this.load()\n        } else {\n          this.$message.error(\"批量删除失败\")\n        }\n      })\n    },\n    reset() {\n      this.name = \"\"\n      this.load()\n    },\n    handleSizeChange(pageSize) {\n      console.log(pageSize)\n      this.pageSize = pageSize\n      this.load()\n    },\n    handleCurrentChange(pageNum) {\n      console.log(pageNum)\n      this.pageNum = pageNum\n      this.load()\n    },\n    async selectMenu(role) {\n      this.roleId = role.id\n      this.roleFlag = role.flag\n\n      // 请求菜单数据\n      this.request.get(\"/menu\").then(res => {\n        this.menuData = res.data\n\n        // 把后台返回的菜单数据处理成 id数组\n        this.expends = this.menuData.map(v => v.id)\n      })\n\n      this.request.get(\"/role/roleMenu/\" + this.roleId).then(res => {\n        this.checks = res.data\n        this.ids.forEach(id => {\n          if (!this.checks.includes(id)) {\n            // 可能会报错：Uncaught (in promise) TypeError: Cannot read properties of undefined (reading 'setChecked')\n            this.$nextTick(() => {\n              this.$refs.tree.setChecked(id, false)\n            })\n          }\n        })\n        this.menuDialogVis = true\n      })\n    },\n  }\n}\n</script>\n\n\n<style>\n.headerBg {\n  background: #eee!important;\n}\n</style>\n"]}]}