{"remainingRequest":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\springboot+vue\\pure-design-master\\vue\\src\\views\\Stenv.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\springboot+vue\\pure-design-master\\vue\\src\\views\\Stenv.vue","mtime":1651569797232},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651840057970},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1651840062270},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651840057970},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1651840061711}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Stenv.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAufile":"Stenv.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div style=\"height: calc(100vh - 60px);\" >\r\n    <div><h1>仓库一环境信息</h1></div>\r\n    <el-row style=\"height: 300px;width: 100%\">\r\n      <el-col :span=\"7\"><div class=\"grid-content\" style=\"text-align: center\">\r\n        <div style=\"width:300px;height:300px;\" ref=\"echarts01\"></div>\r\n        <div></div>\r\n      </div></el-col>\r\n      <el-col :span=\"7\"><div class=\"grid-content\">\r\n        <div style=\"width:300px;height:300px;margin-top: 80px\" ref=\"echarts02\"></div>\r\n      </div></el-col>\r\n      <el-col :span=\"7\"><div class=\"grid-content\">\r\n        <div style=\"width:300px;height:300px;\" >\r\n          <div><img :src=\"cardImgList[this.index]\" style=\"height: 200px;width: 200px;margin-top: 40px\" @click=\"changeImg\"></div>\r\n        </div>\r\n      </div></el-col>\r\n    </el-row>\r\n    <div style=\"color: #cccccc\"><h1>仓库二环境信息</h1></div>\r\n    <img src=\"../assets/008.jpg\" >\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nexport default {\r\n  name: \"Stenv\",\r\n  data(){\r\n    return{\r\n      temperature01: 25.68,\r\n      Humidity01: 0.6,\r\n      url: require(\"../assets/bg1.jpg\"),\r\n      cardImgList: [require('../assets/alarm.jpg'),require('../assets/alarm.gif')],\r\n      index: 0,\r\n    }\r\n  },\r\n  mounted () {\r\n    this.load();\r\n    // this.setChart01();\r\n    // this.setChart02();\r\n    this.getImg();\r\n    this.loaded();\r\n  },\r\n  methods: {\r\n    setChart01() {\r\n      let myChart = this.$echarts.init(this.$refs.echarts01);\r\n      // 指定图表的配置项和数据\r\n      let option = {\r\n        series: [\r\n          {\r\n            type: 'gauge',\r\n            center: ['50%', '60%'],\r\n            startAngle: 200,\r\n            endAngle: -20,\r\n            min: 0,\r\n            max: 60,\r\n            splitNumber: 12,\r\n            itemStyle: {\r\n              color: '#FFAB91'\r\n            },\r\n            progress: {\r\n              show: true,\r\n              width: 30\r\n            },\r\n            pointer: {\r\n              show: false\r\n            },\r\n            axisLine: {\r\n              lineStyle: {\r\n                width: 30\r\n              }\r\n            },\r\n            axisTick: {\r\n              distance: -45,\r\n              splitNumber: 5,\r\n              lineStyle: {\r\n                width: 2,\r\n                color: '#999'\r\n              }\r\n            },\r\n            splitLine: {\r\n              distance: -52,\r\n              length: 14,\r\n              lineStyle: {\r\n                width: 3,\r\n                color: '#999'\r\n              }\r\n            },\r\n            axisLabel: {\r\n              distance: 0,\r\n              color: '#999',\r\n              fontSize: 16\r\n            },\r\n            anchor: {\r\n              show: false\r\n            },\r\n            title: {\r\n              show: false\r\n            },\r\n            detail: {\r\n              valueAnimation: true,\r\n              width: '60%',\r\n              lineHeight: 40,\r\n              borderRadius: 8,\r\n              offsetCenter: [0, '-15%'],\r\n              fontSize: 36,\r\n              fontWeight: 'bolder',\r\n              formatter: '{value} °C',\r\n              color: 'auto'\r\n            },\r\n            data: [\r\n              {\r\n                value: this.temperature01\r\n              }\r\n            ]\r\n          },\r\n          {\r\n            type: 'gauge',\r\n            center: ['50%', '60%'],\r\n            startAngle: 200,\r\n            endAngle: -20,\r\n            min: 0,\r\n            max: 60,\r\n            itemStyle: {\r\n              color: '#FD7347'\r\n            },\r\n            progress: {\r\n              show: true,\r\n              width: 8\r\n            },\r\n            pointer: {\r\n              show: false\r\n            },\r\n            axisLine: {\r\n              show: false\r\n            },\r\n            axisTick: {\r\n              show: false\r\n            },\r\n            splitLine: {\r\n              show: false\r\n            },\r\n            axisLabel: {\r\n              show: false\r\n            },\r\n            detail: {\r\n              show: false\r\n            },\r\n            data: [\r\n              {\r\n                value: 20\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n      myChart.setOption(option)\r\n    },\r\n    setChart02(){\r\n      let myChart = this.$echarts.init(this.$refs.echarts02);\r\n      // 指定图表的配置项和数据\r\n      let option = {\r\n        series: [\r\n          {\r\n            type: 'gauge',\r\n            startAngle: 180,\r\n            endAngle: 0,\r\n            min: 0,\r\n            max: 1,\r\n            splitNumber: 8,\r\n            axisLine: {\r\n              lineStyle: {\r\n                width: 6,\r\n                color: [\r\n                  [0.25, '#FF6E76'],\r\n                  [0.5, '#FDDD60'],\r\n                  [0.75, '#58D9F9'],\r\n                  [1, '#7CFFB2']\r\n                ]\r\n              }\r\n            },\r\n            pointer: {\r\n              icon: 'path://M12.8,0.7l12,40.1H0.7L12.8,0.7z',\r\n              length: '12%',\r\n              width: 20,\r\n              offsetCenter: [0, '-60%'],\r\n              itemStyle: {\r\n                color: 'auto'\r\n              }\r\n            },\r\n            axisTick: {\r\n              length: 12,\r\n              lineStyle: {\r\n                color: 'auto',\r\n                width: 2\r\n              }\r\n            },\r\n            splitLine: {\r\n              length: 20,\r\n              lineStyle: {\r\n                color: 'auto',\r\n                width: 5\r\n              }\r\n            },\r\n            axisLabel: {\r\n              color: '#464646',\r\n              fontSize: 18,\r\n              distance: -60,\r\n              formatter: function (value) {\r\n                if (value === 0.875) {\r\n                  return '湿润';\r\n                } else if (value === 0.625) {\r\n                  return '较湿';\r\n                } else if (value === 0.375) {\r\n                  return '较干';\r\n                } else if (value === 0.125) {\r\n                  return '干燥';\r\n                }\r\n                return '';\r\n              }\r\n            },\r\n            title: {\r\n              offsetCenter: [0, '-20%'],\r\n              fontSize: 20\r\n            },\r\n            detail: {\r\n              fontSize: 36,\r\n              offsetCenter: [0, '0%'],\r\n              valueAnimation: true,\r\n              formatter: function (value) {\r\n                return Math.round(value * 100) + '%';\r\n              },\r\n              color: 'auto'\r\n            },\r\n            data: [\r\n              {\r\n                value: this.Humidity01,\r\n                name: ''\r\n              }\r\n            ]\r\n          }\r\n        ]\r\n      };\r\n      myChart.setOption(option);\r\n          },\r\n    getImg(){\r\n      this.$refs.divRef.style.background = \"url(\" + require(\"../assets/bg1.jpg\") + \")\"\r\n    },\r\n    changeImg(){\r\n      this.index=(this.index+1)%2\r\n    },\r\n    async load() {\r\n      await request.get(\"/stenv\").then(res => {\r\n        // console.log(res)\r\n        // console.log(res.records[0].temperature)\r\n        // console.log(res.records[0].humidity)\r\n        this.temperature01 = res.records[0].temperature\r\n        this.Humidity01= res.records[0].humidity\r\n        this.index= (res.records[0].fire)%2\r\n      })\r\n      this.setChart01();\r\n      this.setChart02();\r\n    },\r\n    loaded(){\r\n      setInterval(this.load, 5000)\r\n    }\r\n\r\n  },\r\n  beforeDestroy() {\r\n    clearInterval(this.timer);\r\n  },\r\n  created() {\r\n    this.load(); //你的方法\r\n    this.timer = setInterval(() => {\r\n      this.load(); //你的方法\r\n    }, 10000);\r\n  },\r\n\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style scoped>\r\n.el-row {\r\n  height: 300px;\r\n  width: 100vh;\r\n /* border: indianred solid 1px;*/\r\n  text-align: center;\r\n}\r\n.el-col {\r\n  border-radius: 4px;\r\n  height: 100%;\r\n  /*border: indianred solid 1px;*/\r\n  text-align: center;\r\n}\r\n\r\n.grid-content {\r\n  border-radius: 4px;\r\n  min-height: 36px;\r\n}\r\n</style>"]}]}