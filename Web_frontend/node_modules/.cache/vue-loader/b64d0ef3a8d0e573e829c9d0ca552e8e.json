{"remainingRequest":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\springboot+vue\\pure-design-master\\vue\\src\\views\\BodyTemp.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"F:\\springboot+vue\\pure-design-master\\vue\\src\\views\\BodyTemp.vue","mtime":1652162685829},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\css-loader\\dist\\cjs.js","mtime":1651840069138},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1651840064580},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\postcss-loader\\src\\index.js","mtime":1651840060980},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1651840057970},{"path":"F:\\springboot+vue\\pure-design-master\\vue\\node_modules\\vue-loader\\lib\\index.js","mtime":1651840061711}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZWwtdGFibGUgLmluZm8tcm93IHsNCiAgYmFja2dyb3VuZDogI2NjY2RjODsNCn0NCg0KLmVsLXRhYmxlIC5zdWNjZXNzLXJvdyB7DQogIGJhY2tncm91bmQ6ICNmMGY5ZWI7DQp9DQoNCi5lbC10YWJsZSAuZGFuZ2VyLXJvdyB7DQogIGJhY2tncm91bmQ6ICNmZmYwZjA7DQp9DQoNCg=="},{"version":3,"sources":["BodyTemp.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwLA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"BodyTemp.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n<div>\r\n    <el-row :gutter=\"10\" style=\"margin-bottom: 60px\">\r\n      <el-col :span=\"2\">\r\n        <img src=\"../assets/测温.png\" style=\"width: 100px;margin-top: 10px\">\r\n      </el-col>\r\n\r\n        <el-col :span=\"4\"  v-for=\"(item, index) in alarm\" :key=\"item\">\r\n          <el-card style=\"color: #F56C6C\">\r\n            <div><i class=\"el-icon-money\" /> 异常体温警报</div>\r\n            <div style=\"padding: 10px 0; text-align: center; font-weight: bold\">\r\n              {{item.location}} {{item.temperature}} ℃\r\n            </div>\r\n            <div style=\" text-align: center\" :formatter=\"formatterdate\">\r\n              <div>{{item.time | format('MM月DD日 HH时mm分') }}</div>\r\n            </div>\r\n          </el-card>\r\n        </el-col>\r\n\r\n  </el-row>\r\n    <el-row>\r\n      <div style=\"margin-left: 10px\">\r\n        <el-table\r\n            :data=\"tableData\"\r\n            style=\"width: 100%\"\r\n            :row-class-name=\"tableRowClassName\">\r\n          <el-table-column prop=\"id\" label=\"序号\" width=\"100\"></el-table-column>\r\n          <el-table-column prop=\"time\" label=\"测温时间\" width=\"200\" :formatter=\"formatterdate\"></el-table-column>\r\n          <el-table-column prop=\"location\" label=\"测温位置\" width=\"200\"></el-table-column>\r\n          <el-table-column prop=\"temperature\" label=\"测温数值\" width=\"200\"></el-table-column>\r\n          <el-table-column prop=\"status\" label=\"备注\" ></el-table-column>\r\n        </el-table>\r\n        <div class=\"block\" style=\"text-align: right;margin-top: 5px;margin-right: 80px\">\r\n          <el-pagination\r\n              @current-change=\"handleCurrentChange\"\r\n              :current-page.sync=\"currentPage\"\r\n              :page-size=\"pageSize\"\r\n              layout=\"prev, pager, next, jumper\"\r\n              :total=\"total\">\r\n          </el-pagination>\r\n        </div>\r\n      </div>\r\n\r\n    </el-row>\r\n</div>\r\n</template>\r\n\r\n<script>\r\nimport request from \"@/utils/request\";\r\nexport default {\r\n  name: \"BodyTemp\",\r\n  data() {\r\n    return {\r\n      currentPage: 1,\r\n      total: 0,\r\n      date:'',\r\n      pageNum: 1,\r\n      pageSize: 10,\r\n      tableData: [],\r\n      sat:'',\r\n      alarm:[\r\n\r\n      ],\r\n    }\r\n  },\r\n  methods: {\r\n    tableRowClassName(row) {\r\n      /*console.log(row)*/\r\n      for(let [key, value] of Object.entries(row)){\r\n        this.sat=value.status\r\n        /*this.alarm=[]*/\r\n        if(value.status==='异常'){\r\n          this.sat=''\r\n          if(this.alarm.length<5){\r\n            var arr = []\r\n            arr.push(value)\r\n            for (var i = 0; i < arr.length; i++) {\r\n              if (this.alarm.indexOf(arr[i]) === -1) {\r\n                this.alarm.push(arr[i])\r\n              }\r\n            }\r\n          }\r\n          return 'danger-row'\r\n        }else if(value.status==='正常'){\r\n          this.sat=''\r\n          return 'success-row'\r\n        }else {\r\n          this.sat=''\r\n          return 'info-row'\r\n        }\r\n      }\r\n\r\n    },\r\n    load() {\r\n      request.get(\"/temp/page\", {\r\n        params: {\r\n          pageNum: this.pageNum,\r\n          pageSize: this.pageSize,\r\n        }\r\n      }).then(res => {\r\n        console.log(res)\r\n        this.tableData = res.records\r\n        this.total = res.total\r\n      })\r\n    },\r\n    handleCurrentChange(pageNum) {\r\n      console.log(pageNum)\r\n      this.pageNum = pageNum\r\n      this.load()\r\n    },\r\n    formatterdate(row, column){\r\n      let data = row[column.property]\r\n      if(data == null) {\r\n        return null\r\n      }\r\n      let date = new Date(data);\r\n      var o = {\r\n        \"M+\" : date.getMonth()+1,                 //月份\r\n        \"d+\" : date.getDate(),                    //日\r\n        \"h+\" : date.getHours(),                   //小时\r\n        \"m+\" : date.getMinutes(),                 //分\r\n        \"s+\" : date.getSeconds(),                 //秒\r\n        \"q+\" : Math.floor((date.getMonth()+3)/3), //季度\r\n        \"S\"  : date.getMilliseconds()             //毫秒\r\n      };\r\n      var fmt = \"yyyy-MM-dd hh:mm:ss\";\r\n      if(/(y+)/.test(fmt)) {\r\n        fmt=fmt.replace(RegExp.$1, (date.getFullYear()+\"\").substr(4 - RegExp.$1.length));\r\n      }\r\n      for(var k in o) {\r\n        if(new RegExp(\"(\"+ k +\")\").test(fmt)){\r\n          fmt = fmt.replace(RegExp.$1, (RegExp.$1.length==1) ? (o[k]) : ((\"00\"+ o[k]).substr((\"\"+ o[k]).length)));\r\n        }\r\n      }\r\n      return fmt ;\r\n\r\n    }\r\n  },\r\n  filters: {\r\n    /**\r\n     *格式化时间文本\r\n     * @param {Date} time 时间\r\n     * @param {String} format 文本格式\r\n     *  Y 表示年份\r\n     *  M 表示月份\r\n     *  D 表示某日\r\n     *  h 表示小时\r\n     *  m 表示分\r\n     *  s 表示秒\r\n     *  w 表示星期几\r\n     */\r\n    format(time, format = 'YYYY-MM-DD HH:mm:ss') {\r\n      let date = new Date(time)\r\n      let o = {\r\n        'M+': date.getMonth() + 1,\r\n        'D+': date.getDate(),\r\n        'H+': date.getHours(),\r\n        'm+': date.getMinutes(),\r\n        's+': date.getSeconds(),\r\n        'w': '日一二三四五六'.charAt(date.getDay())\r\n      };\r\n\r\n      format = format.replace(/Y{4}/, date.getFullYear()).replace(/Y{2}/, date.getFullYear().toString().substring(2));\r\n\r\n      let k, reg\r\n      for (k in o) {\r\n        reg = new RegExp(k);\r\n        /* eslint no-use-before-define:0 */\r\n        format = format.replace(reg, match);\r\n      }\r\n      function match(m) {\r\n        return m.length === 1 ? o[k] : ('00' + o[k]).substr(('' + o[k]).length);\r\n      }\r\n\r\n      return format;\r\n    }\r\n  },\r\n  created() {\r\n    this.load()\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.el-table .info-row {\r\n  background: #cccdc8;\r\n}\r\n\r\n.el-table .success-row {\r\n  background: #f0f9eb;\r\n}\r\n\r\n.el-table .danger-row {\r\n  background: #fff0f0;\r\n}\r\n\r\n</style>\r\n\r\n"]}]}